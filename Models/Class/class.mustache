const dbpath = './Database/{{dbName}}'
var db = require('../ORM/sqlite.js')(dbpath) 

class {{classTitle}} {
    constructor ({{classProperties}}) {
        {{{classConstructor}}}
        Object.defineProperty(this, '{{idField}}', {enumerable: false});
    }

    /**
    *
    */
    static all(callback){
        return db.all("SELECT * FROM {{classTitle}};", {{classTitle}}, callback);
    }

    /**
    *
    */
    static get(id, callback){
        return db.get("SELECT * FROM {{classTitle}} WHERE {{idField}} = ?;", [id], {{classTitle}}, callback);
    }

    /**
    *
    */
    static delete(id,callback){
        return db.get("DELETE FROM {{classTitle}} WHERE {{idField}} = ?;", [id], callback);
    }   

    save(callback){
        if(this.{{idField}}){   //Se existir valor no id fazemos update
        {{! o iterateProperties tem 3 chavetas para conseguirmos mostrar o caracter =  }}

            db.run("UPDATE {{classTitle}} SET {{{iterateProperties}}}", {{propertiesWithID}}, callback);

        } else {    //Caso contrÃ¡rio adiciona-se um novo campo a tabela
            db.run("INSERT INTO {{classTitle}} ({{classProperties}}) VALUES ({{iterateValuesForInsert}})", [{{iterateArrayForInsert}}] , callback);
            
            //db.run("SELECT last_insert_rowid()", [],(id) => {this.{{idField}} = id;});
        }
    }

}

module.exports = {{classTitle}};
