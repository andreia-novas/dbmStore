const dbpath = './Publish/Database/{{dbName}}';
var db = require('../Database/sqlite.js')(dbpath); 
{{{requireDependencies}}}

class {{classTitle}} {
    constructor({{classProperties}}) {
        {{{classConstructor}}}

        Object.defineProperty(this, '{{idField}}', {enumerable: true, writable: true});
    }

    /**
    * Method that gets all the {{classTitle}} objects from the database
    * @param {*} callback function to be applied to the results query
    */
    static all(callback) {
        return db.all("SELECT * FROM {{classTitle}};", {{classTitle}}, callback);
    }

    /**
    * Method that gets a specific {{classTitle}} object from the database
    * @param {*} id  id of the object to obtain
    * @param {*} callback function to be applied to the results query
    */
    static get(id, callback) {
        return db.get("SELECT * FROM {{classTitle}} WHERE {{idField}} = ?;", [id], {{classTitle}}, callback);
    }

    /**
    * Method that removes a specific {{classTitle}} object from the database
    * @param {*} id id of the object to remove
    * @param {*} callback function to be applied to the results query
    */
    static delete(id,callback) {
        return db.get("DELETE FROM {{classTitle}} WHERE {{idField}} = ?;", [id], callback);
    }   

    /**
    * Method that inserts or update a {{classTitle}} object
    * @param {*} callback function to be applied to the results query
    */
    save(callback) {
        if(this.{{idField}}){   //Se existir valor no id fazemos update
        {{! o iterateProperties tem 3 chavetas para conseguirmos mostrar o caracter =  }}

            db.run("UPDATE {{classTitle}} SET {{{iterateProperties}}}", {{propertiesWithID}}, callback);

        } else {    //Caso contrÃ¡rio adiciona-se um novo campo a tabela
            db.run("INSERT INTO {{classTitle}} ({{classProperties}}) VALUES ({{iterateValuesForInsert}})", [{{iterateArrayForInsert}}] , callback);
            
            //db.run("SELECT last_insert_rowid()", [],(id) => {this.{{idField}} = id;});
        }
    }

    {{{getRelation}}}

}

module.exports = {{classTitle}};